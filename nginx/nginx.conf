user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    
    # Docker's embedded DNS server
    resolver 127.0.0.11 valid=30s;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Upstream services
    upstream auth_service {
        server auth-service:8001;
    }

    upstream patient_service {
        server patient-service:8002;
    }

    upstream clinician_service {
        server clinician-service:8003;
    }


    upstream database_service {
        server database-service:8004;
    }

    upstream admin_service {
        server admin-service:8005;
    }

    upstream file_service {
        server file-service:8006;
    }

    upstream rag_embedding_service {
        server rag-embedding-service:8007;
    }

    upstream ocr_service {
        server ocr-service:8008;
    }
    
    upstream suggestion_service {
        server suggestion-service:8009;
    }

    upstream translation_service {
        server translation-service:8008;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;
        
        # Set max upload size globally
        client_max_body_size 50M;

        # Security headers (moved to individual locations to allow overrides)
        # add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://unpkg.com; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; connect-src 'self' http: https: ws: wss:;" always;

        # Root location - redirect to login
        location = / {
            return 301 /login;
        }

        # Suggestion service routes
        location ^~ /api/suggest/ {
            proxy_pass http://suggestion_service/suggest;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Auth service routes
        location /api/auth/ {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /login {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /signup {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /logout {
            proxy_pass http://auth_service/logout/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Patient service routes
        location /api/patients/ {
            proxy_pass http://patient_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /patient/ {
            proxy_pass http://patient_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Patient service static files
        location ~ ^/patient/static/(.*)$ {
            proxy_pass http://patient_service/static/$1;
            proxy_set_header Host $host;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # handles the web page traffic for the patient dashboard.
        location /patient/dashboard/ {
            proxy_pass http://patient_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Clinician service routes
        location /api/clinician/ {
            proxy_pass http://clinician_service/api/clinician/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        location /clinician/ {
            proxy_pass http://clinician_service/clinician/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Clinician service static files
        location ~ ^/clinician/static/(.*)$ {
            proxy_pass http://clinician_service/clinician/static/$1;
            proxy_set_header Host $host;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Medical record viewing - special handling for iframe
        location /api/files/medical-records/ {
            proxy_pass http://clinician_service/api/files/medical-records/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Allow iframe from same origin
            proxy_hide_header X-Frame-Options;
            add_header X-Frame-Options "SAMEORIGIN" always;
            
            # Pass JWT token from cookie to Authorization header
            set $auth_header "";
            if ($cookie_access_token) {
                set $auth_header "Bearer $cookie_access_token";
            }
            proxy_set_header Authorization $auth_header;
        }
        
        # Temp file cleanup endpoint
        location /api/files/temp/ {
            proxy_pass http://clinician_service/api/files/temp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass JWT token from cookie to Authorization header
            set $auth_header "";
            if ($cookie_access_token) {
                set $auth_header "Bearer $cookie_access_token";
            }
            proxy_set_header Authorization $auth_header;
        }


        # Admin service routes
        location /api/admin/ {
            proxy_pass http://admin_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin/ {
            proxy_pass http://admin_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_pass_request_headers on;
        }
        
        # Admin service static files
        location ~ ^/admin/static/(.*)$ {
            proxy_pass http://admin_service/admin/static/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header X-Content-Type-Options;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Database service routes (internal API)
        location /api/db/ {
            proxy_pass http://database_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File service routes
        location /api/files/ {
            proxy_pass http://file_service/api/files/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            
            # Increase timeout for file uploads
            proxy_read_timeout 300s;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            
            # Increase buffer sizes for file uploads
            client_max_body_size 100M;
            proxy_buffers 16 16k;
            proxy_buffer_size 32k;
        }

        # RAG Embedding service routes
        location /api/rag/ {
            proxy_pass http://rag_embedding_service/api/rag/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            
            # Increase timeout for embedding processing
            proxy_read_timeout 300s;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # WebSocket for embedding progress
        location /ws/embedding/ {
            proxy_pass http://rag_embedding_service/ws/embedding/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # OCR service routes
        location /api/ocr/ {
            proxy_pass http://ocr_service/api/ocr/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            
            # Increase timeout for OCR processing
            proxy_read_timeout 300s;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            
            # Increase buffer sizes for file uploads
            client_max_body_size 50M;
            proxy_buffers 16 16k;
            proxy_buffer_size 32k;
        }
        
        # WebSocket for OCR progress
        location /ws/ocr/ {
            proxy_pass http://ocr_service/ws/ocr/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        location /api/translation/ {
            proxy_pass http://translation_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # WebSocket for translation service.
        location /ws/translations/ {
            proxy_pass http://patient_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        # Health check endpoints
        location /health/auth {
            proxy_pass http://auth_service/health/;
            proxy_set_header Host $host;
        }

        location /health/patient {
            proxy_pass http://patient_service/health/;
            proxy_set_header Host $host;
        }

        location /health/clinician {
            proxy_pass http://clinician_service/health/;
            proxy_set_header Host $host;
            proxy_set_header Authorization $http_authorization;
        }


        location /health/database {
            proxy_pass http://database_service/health/;
            proxy_set_header Host $host;
        }

        location /health/admin {
            proxy_pass http://admin_service/health/;
            proxy_set_header Host $host;
        }

        location /health/file {
            proxy_pass http://file_service/api/health/;
            proxy_set_header Host $host;
        }

        location /health/rag {
            proxy_pass http://rag_embedding_service/health/;
            proxy_set_header Host $host;
        }

        location /health/translation {
            proxy_pass http://translation_service/health;
            proxy_set_header Host $host;
        }


        # Combined health check
        location /health {
            default_type application/json;
            return 200 '{"status": "healthy", "service": "nginx"}';
        }

        # Static files - try auth service first, then patient service
        location /static/ {
            # Remove X-Content-Type-Options header for static files to avoid MIME type issues
            proxy_hide_header X-Content-Type-Options;
            
            # Try auth service first
            proxy_pass http://auth_service;
            proxy_intercept_errors on;
            error_page 404 = @patient_static;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        location @patient_static {
            proxy_pass http://patient_service$request_uri;
            proxy_intercept_errors on;
            error_page 404 = @clinician_static;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        location @clinician_static {
            proxy_pass http://clinician_service$request_uri;
            proxy_intercept_errors on;
            error_page 404 = @admin_static;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        location @admin_static {
            proxy_pass http://admin_service$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header X-Content-Type-Options;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        location /media/ {
            alias /media/;
            expires 7d;
            add_header Cache-Control "public";
        }
        
        # Special handling for temporary medical records to allow iframe embedding
        location /media/temp_medical_records/ {
            alias /media/temp_medical_records/;
            
            # Only set the headers we need for iframe embedding
            add_header Cache-Control "private, no-store" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            
            # Ensure other security headers are set correctly
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            
            expires 1h;
        }


        # Default location for other unmatched paths (must be last)
        location / {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add X-Frame-Options for security
            add_header X-Frame-Options "SAMEORIGIN" always;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
